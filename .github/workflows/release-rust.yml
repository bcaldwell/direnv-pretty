name: Release
on:
  push:
    tags:
      - "v*"

jobs:
  build_artifacts:
    name: Build artifacts for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - name: linux
            os: ubuntu-latest
            asset_name_suffix: x86_64-linux
          - name: macos
            os: macos-latest
            asset_name_suffix: x86_64-darwin

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Build
        run: cargo build --release --locked

      - name: Rename artifacts
        run: mv target/release/direnv-pretty target/release/direnv-pretty-${{ matrix.asset_name_suffix }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: direnv-pretty-${{ matrix.asset_name_suffix }}
          path: target/release/direnv-pretty-${{ matrix.asset_name_suffix }}

  build_artifacts_m1:
    name: Build artifacts for macos M1
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: aarch64-apple-darwin

      - name: Build
        run: cargo build --release --locked --target aarch64-apple-darwin

      - name: Rename artifacts
        run: mv target/aarch64-apple-darwin/release/direnv-pretty target/release/direnv-pretty-aarch64-darwin

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: direnv-pretty-aarch64-darwin
          path: target/release/direnv-pretty-aarch64-darwin

  deploy_artifacts:
    name: Create release
    needs: [build_artifacts, build_artifacts_m1]
    runs-on: ubuntu-latest
    steps:
      - name: Create release directory
        run: mkdir release
      - name: Get artifacts
        uses: actions/download-artifact@v3
        with:
          path: release
      - name: Generate Checksum
        uses: jmgilman/actions-generate-checksum@v1.0.1
        with:
          patterns: "release/*/*"
      - run: ls -R release && cat checksum.txt
      - name: Create release with artifact
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.tag }}
          fail_on_unmatched_files: true
          generate_release_notes: true
          files: |
            release/*/*
            checksum.txt
